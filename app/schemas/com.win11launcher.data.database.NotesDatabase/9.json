{
  "formatVersion": 1,
  "database": {
    "version": 9,
    "identityHash": "5e737605285cf4fbf8e70fa59d863f4f",
    "entities": [
      {
        "tableName": "notes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `title` TEXT NOT NULL, `content` TEXT NOT NULL, `source_package` TEXT NOT NULL, `source_app_name` TEXT NOT NULL, `folder_id` TEXT NOT NULL, `rule_id` TEXT, `tags` TEXT NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `is_starred` INTEGER NOT NULL, `is_archived` INTEGER NOT NULL, `original_notification_id` TEXT, `notification_timestamp` INTEGER, PRIMARY KEY(`id`), FOREIGN KEY(`folder_id`) REFERENCES `folders`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`rule_id`) REFERENCES `tracking_rules`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourcePackage",
            "columnName": "source_package",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourceAppName",
            "columnName": "source_app_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "folderId",
            "columnName": "folder_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ruleId",
            "columnName": "rule_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isStarred",
            "columnName": "is_starred",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isArchived",
            "columnName": "is_archived",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "originalNotificationId",
            "columnName": "original_notification_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notificationTimestamp",
            "columnName": "notification_timestamp",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_notes_folder_id",
            "unique": false,
            "columnNames": [
              "folder_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notes_folder_id` ON `${TABLE_NAME}` (`folder_id`)"
          },
          {
            "name": "index_notes_rule_id",
            "unique": false,
            "columnNames": [
              "rule_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notes_rule_id` ON `${TABLE_NAME}` (`rule_id`)"
          },
          {
            "name": "index_notes_created_at",
            "unique": false,
            "columnNames": [
              "created_at"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notes_created_at` ON `${TABLE_NAME}` (`created_at`)"
          },
          {
            "name": "index_notes_source_package",
            "unique": false,
            "columnNames": [
              "source_package"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notes_source_package` ON `${TABLE_NAME}` (`source_package`)"
          },
          {
            "name": "index_notes_original_notification_id",
            "unique": true,
            "columnNames": [
              "original_notification_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_notes_original_notification_id` ON `${TABLE_NAME}` (`original_notification_id`)"
          },
          {
            "name": "index_notes_source_package_title_content",
            "unique": false,
            "columnNames": [
              "source_package",
              "title",
              "content"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_notes_source_package_title_content` ON `${TABLE_NAME}` (`source_package`, `title`, `content`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "folders",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "folder_id"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "tracking_rules",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "rule_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "folders",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `color` TEXT NOT NULL, `icon` TEXT NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `is_default` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDefault",
            "columnName": "is_default",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_folders_name",
            "unique": true,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_folders_name` ON `${TABLE_NAME}` (`name`)"
          },
          {
            "name": "index_folders_created_at",
            "unique": false,
            "columnNames": [
              "created_at"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_folders_created_at` ON `${TABLE_NAME}` (`created_at`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "tracking_rules",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `description` TEXT NOT NULL, `source_packages` TEXT NOT NULL, `filter_type` TEXT NOT NULL, `filter_criteria` TEXT NOT NULL, `destination_folder_id` TEXT NOT NULL, `auto_tags` TEXT NOT NULL, `is_active` INTEGER NOT NULL, `priority` INTEGER NOT NULL, `quiet_hours_enabled` INTEGER NOT NULL, `quiet_hours_start` TEXT NOT NULL, `quiet_hours_end` TEXT NOT NULL, `weekdays_only` INTEGER NOT NULL, `max_notes_per_day` INTEGER NOT NULL, `duplicate_detection_enabled` INTEGER NOT NULL, `fuzzy_duplicate_detection_enabled` INTEGER NOT NULL, `duplicate_similarity_threshold` REAL NOT NULL, `duplicate_detection_time_window_hours` INTEGER NOT NULL, `cross_rule_duplicate_detection_enabled` INTEGER NOT NULL, `min_content_length` INTEGER NOT NULL, `max_content_length` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `last_triggered_at` INTEGER, `notes_captured_count` INTEGER NOT NULL, `total_matches_count` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`destination_folder_id`) REFERENCES `folders`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourcePackages",
            "columnName": "source_packages",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "filterType",
            "columnName": "filter_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "filterCriteria",
            "columnName": "filter_criteria",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "destinationFolderId",
            "columnName": "destination_folder_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "autoTags",
            "columnName": "auto_tags",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "is_active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "quietHoursEnabled",
            "columnName": "quiet_hours_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "quietHoursStart",
            "columnName": "quiet_hours_start",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "quietHoursEnd",
            "columnName": "quiet_hours_end",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "weekdaysOnly",
            "columnName": "weekdays_only",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxNotesPerDay",
            "columnName": "max_notes_per_day",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "duplicateDetectionEnabled",
            "columnName": "duplicate_detection_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fuzzyDuplicateDetectionEnabled",
            "columnName": "fuzzy_duplicate_detection_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "duplicateSimilarityThreshold",
            "columnName": "duplicate_similarity_threshold",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "duplicateDetectionTimeWindowHours",
            "columnName": "duplicate_detection_time_window_hours",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "crossRuleDuplicateDetectionEnabled",
            "columnName": "cross_rule_duplicate_detection_enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minContentLength",
            "columnName": "min_content_length",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxContentLength",
            "columnName": "max_content_length",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastTriggeredAt",
            "columnName": "last_triggered_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "notesCapturedCount",
            "columnName": "notes_captured_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalMatchesCount",
            "columnName": "total_matches_count",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_tracking_rules_source_packages",
            "unique": false,
            "columnNames": [
              "source_packages"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tracking_rules_source_packages` ON `${TABLE_NAME}` (`source_packages`)"
          },
          {
            "name": "index_tracking_rules_destination_folder_id",
            "unique": false,
            "columnNames": [
              "destination_folder_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tracking_rules_destination_folder_id` ON `${TABLE_NAME}` (`destination_folder_id`)"
          },
          {
            "name": "index_tracking_rules_is_active",
            "unique": false,
            "columnNames": [
              "is_active"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tracking_rules_is_active` ON `${TABLE_NAME}` (`is_active`)"
          },
          {
            "name": "index_tracking_rules_created_at",
            "unique": false,
            "columnNames": [
              "created_at"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tracking_rules_created_at` ON `${TABLE_NAME}` (`created_at`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "folders",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "destination_folder_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "rule_activity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `rule_id` TEXT NOT NULL, `action_type` TEXT NOT NULL, `notification_title` TEXT NOT NULL, `notification_content` TEXT NOT NULL, `source_package` TEXT NOT NULL, `note_created_id` TEXT, `skip_reason` TEXT NOT NULL, `error_message` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`rule_id`) REFERENCES `tracking_rules`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ruleId",
            "columnName": "rule_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "actionType",
            "columnName": "action_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationTitle",
            "columnName": "notification_title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationContent",
            "columnName": "notification_content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourcePackage",
            "columnName": "source_package",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "noteCreatedId",
            "columnName": "note_created_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "skipReason",
            "columnName": "skip_reason",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "errorMessage",
            "columnName": "error_message",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_rule_activity_rule_id",
            "unique": false,
            "columnNames": [
              "rule_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rule_activity_rule_id` ON `${TABLE_NAME}` (`rule_id`)"
          },
          {
            "name": "index_rule_activity_timestamp",
            "unique": false,
            "columnNames": [
              "timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rule_activity_timestamp` ON `${TABLE_NAME}` (`timestamp`)"
          },
          {
            "name": "index_rule_activity_action_type",
            "unique": false,
            "columnNames": [
              "action_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rule_activity_action_type` ON `${TABLE_NAME}` (`action_type`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "tracking_rules",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "rule_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "financial_patterns",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `transaction_type` TEXT NOT NULL, `amount` REAL, `merchant` TEXT, `category` TEXT NOT NULL, `bank_name` TEXT, `frequency` TEXT NOT NULL, `time_pattern` TEXT NOT NULL, `is_recurring` INTEGER NOT NULL, `last_seen` INTEGER NOT NULL, `confidence` REAL NOT NULL, `source_package` TEXT, `pattern_keywords` TEXT NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `occurrence_count` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "transactionType",
            "columnName": "transaction_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "merchant",
            "columnName": "merchant",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bankName",
            "columnName": "bank_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "frequency",
            "columnName": "frequency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timePattern",
            "columnName": "time_pattern",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isRecurring",
            "columnName": "is_recurring",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastSeen",
            "columnName": "last_seen",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "confidence",
            "columnName": "confidence",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "sourcePackage",
            "columnName": "source_package",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "patternKeywords",
            "columnName": "pattern_keywords",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "occurrenceCount",
            "columnName": "occurrence_count",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_financial_patterns_transaction_type",
            "unique": false,
            "columnNames": [
              "transaction_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_financial_patterns_transaction_type` ON `${TABLE_NAME}` (`transaction_type`)"
          },
          {
            "name": "index_financial_patterns_category",
            "unique": false,
            "columnNames": [
              "category"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_financial_patterns_category` ON `${TABLE_NAME}` (`category`)"
          },
          {
            "name": "index_financial_patterns_bank_name",
            "unique": false,
            "columnNames": [
              "bank_name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_financial_patterns_bank_name` ON `${TABLE_NAME}` (`bank_name`)"
          },
          {
            "name": "index_financial_patterns_is_recurring",
            "unique": false,
            "columnNames": [
              "is_recurring"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_financial_patterns_is_recurring` ON `${TABLE_NAME}` (`is_recurring`)"
          },
          {
            "name": "index_financial_patterns_last_seen",
            "unique": false,
            "columnNames": [
              "last_seen"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_financial_patterns_last_seen` ON `${TABLE_NAME}` (`last_seen`)"
          },
          {
            "name": "index_financial_patterns_confidence",
            "unique": false,
            "columnNames": [
              "confidence"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_financial_patterns_confidence` ON `${TABLE_NAME}` (`confidence`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "research_patterns",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `topic` TEXT NOT NULL, `source_type` TEXT NOT NULL, `key_terms` TEXT NOT NULL, `relevance_score` REAL NOT NULL, `trending_score` REAL NOT NULL, `last_updated` INTEGER NOT NULL, `source_url` TEXT, `source_package` TEXT, `created_at` INTEGER NOT NULL, `confidence_score` REAL NOT NULL, `language` TEXT NOT NULL, `content_length` INTEGER NOT NULL, `has_technical_content` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "topic",
            "columnName": "topic",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourceType",
            "columnName": "source_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "keyTerms",
            "columnName": "key_terms",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "relevanceScore",
            "columnName": "relevance_score",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "trendingScore",
            "columnName": "trending_score",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdated",
            "columnName": "last_updated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sourceUrl",
            "columnName": "source_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sourcePackage",
            "columnName": "source_package",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "confidenceScore",
            "columnName": "confidence_score",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contentLength",
            "columnName": "content_length",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hasTechnicalContent",
            "columnName": "has_technical_content",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_research_patterns_topic",
            "unique": false,
            "columnNames": [
              "topic"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_research_patterns_topic` ON `${TABLE_NAME}` (`topic`)"
          },
          {
            "name": "index_research_patterns_source_type",
            "unique": false,
            "columnNames": [
              "source_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_research_patterns_source_type` ON `${TABLE_NAME}` (`source_type`)"
          },
          {
            "name": "index_research_patterns_relevance_score",
            "unique": false,
            "columnNames": [
              "relevance_score"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_research_patterns_relevance_score` ON `${TABLE_NAME}` (`relevance_score`)"
          },
          {
            "name": "index_research_patterns_trending_score",
            "unique": false,
            "columnNames": [
              "trending_score"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_research_patterns_trending_score` ON `${TABLE_NAME}` (`trending_score`)"
          },
          {
            "name": "index_research_patterns_last_updated",
            "unique": false,
            "columnNames": [
              "last_updated"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_research_patterns_last_updated` ON `${TABLE_NAME}` (`last_updated`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "app_settings",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` TEXT NOT NULL, `value` TEXT NOT NULL, `settingType` TEXT NOT NULL, `category` TEXT NOT NULL, `description` TEXT NOT NULL, `isUserModified` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, PRIMARY KEY(`key`))",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "settingType",
            "columnName": "settingType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isUserModified",
            "columnName": "isUserModified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "key"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "permission_states",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`permissionName` TEXT NOT NULL, `isGranted` INTEGER NOT NULL, `isRequired` INTEGER NOT NULL, `requestCount` INTEGER NOT NULL, `lastRequestTime` INTEGER, `lastGrantedTime` INTEGER, `lastDeniedTime` INTEGER, `userNotes` TEXT NOT NULL, `autoRequestEnabled` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, PRIMARY KEY(`permissionName`))",
        "fields": [
          {
            "fieldPath": "permissionName",
            "columnName": "permissionName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isGranted",
            "columnName": "isGranted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isRequired",
            "columnName": "isRequired",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "requestCount",
            "columnName": "requestCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastRequestTime",
            "columnName": "lastRequestTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastGrantedTime",
            "columnName": "lastGrantedTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastDeniedTime",
            "columnName": "lastDeniedTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "userNotes",
            "columnName": "userNotes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "autoRequestEnabled",
            "columnName": "autoRequestEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "permissionName"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "user_profiles",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `username` TEXT NOT NULL, `displayName` TEXT NOT NULL, `profilePicturePath` TEXT NOT NULL, `profilePictureUri` TEXT NOT NULL, `backgroundImagePath` TEXT NOT NULL, `themeColor` TEXT NOT NULL, `bio` TEXT NOT NULL, `email` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `lastLoginAt` INTEGER, `isDefault` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "profilePicturePath",
            "columnName": "profilePicturePath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "profilePictureUri",
            "columnName": "profilePictureUri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "backgroundImagePath",
            "columnName": "backgroundImagePath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "themeColor",
            "columnName": "themeColor",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bio",
            "columnName": "bio",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastLoginAt",
            "columnName": "lastLoginAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isDefault",
            "columnName": "isDefault",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "user_customizations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`profileId` TEXT NOT NULL, `startMenuLayout` TEXT NOT NULL, `taskbarPosition` TEXT NOT NULL, `showUserPictureInStartMenu` INTEGER NOT NULL, `showUsernameInStartMenu` INTEGER NOT NULL, `enableAnimations` INTEGER NOT NULL, `enableSounds` INTEGER NOT NULL, `autoHideTaskbar` INTEGER NOT NULL, `transparencyEffects` INTEGER NOT NULL, `fontSize` TEXT NOT NULL, `iconSize` TEXT NOT NULL, `cornerRadius` INTEGER NOT NULL, `accentColor` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, PRIMARY KEY(`profileId`))",
        "fields": [
          {
            "fieldPath": "profileId",
            "columnName": "profileId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "startMenuLayout",
            "columnName": "startMenuLayout",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "taskbarPosition",
            "columnName": "taskbarPosition",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "showUserPictureInStartMenu",
            "columnName": "showUserPictureInStartMenu",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "showUsernameInStartMenu",
            "columnName": "showUsernameInStartMenu",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "enableAnimations",
            "columnName": "enableAnimations",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "enableSounds",
            "columnName": "enableSounds",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "autoHideTaskbar",
            "columnName": "autoHideTaskbar",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transparencyEffects",
            "columnName": "transparencyEffects",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fontSize",
            "columnName": "fontSize",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "iconSize",
            "columnName": "iconSize",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "cornerRadius",
            "columnName": "cornerRadius",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accentColor",
            "columnName": "accentColor",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "profileId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "user_files",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `profileId` TEXT NOT NULL, `fileName` TEXT NOT NULL, `originalFileName` TEXT NOT NULL, `filePath` TEXT NOT NULL, `fileType` TEXT NOT NULL, `fileSize` INTEGER NOT NULL, `mimeType` TEXT NOT NULL, `checksum` TEXT NOT NULL, `isCompressed` INTEGER NOT NULL, `compressionRatio` REAL NOT NULL, `createdAt` INTEGER NOT NULL, `lastAccessedAt` INTEGER NOT NULL, `isActive` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "profileId",
            "columnName": "profileId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fileName",
            "columnName": "fileName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "originalFileName",
            "columnName": "originalFileName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "filePath",
            "columnName": "filePath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fileType",
            "columnName": "fileType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fileSize",
            "columnName": "fileSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mimeType",
            "columnName": "mimeType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "checksum",
            "columnName": "checksum",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isCompressed",
            "columnName": "isCompressed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "compressionRatio",
            "columnName": "compressionRatio",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastAccessedAt",
            "columnName": "lastAccessedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "all_notifications",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `notification_id` TEXT NOT NULL, `notification_key` TEXT NOT NULL, `source_package` TEXT NOT NULL, `source_app_name` TEXT NOT NULL, `title` TEXT NOT NULL, `content` TEXT NOT NULL, `sub_text` TEXT, `big_text` TEXT, `summary_text` TEXT, `info_text` TEXT, `timestamp` INTEGER NOT NULL, `when_time` INTEGER, `category` TEXT, `group_key` TEXT, `sort_key` TEXT, `channel_id` TEXT, `priority` INTEGER NOT NULL, `visibility` INTEGER NOT NULL, `is_ongoing` INTEGER NOT NULL, `is_clearable` INTEGER NOT NULL, `is_dismissible` INTEGER NOT NULL, `is_group_summary` INTEGER NOT NULL, `is_local_only` INTEGER NOT NULL, `is_auto_cancelable` INTEGER NOT NULL, `large_icon_present` INTEGER NOT NULL, `small_icon_resource` TEXT, `color` INTEGER, `number` INTEGER, `progress_max` INTEGER, `progress_current` INTEGER, `progress_indeterminate` INTEGER, `action_count` INTEGER NOT NULL, `action_titles` TEXT, `extras_bundle` TEXT, `remote_input_available` INTEGER NOT NULL, `notes_created` INTEGER NOT NULL, `notes_created_at` INTEGER, `note_ids` TEXT, `matched_rules` TEXT, `rule_processing_result` TEXT, `was_auto_processed` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL, `deleted_at` INTEGER, `is_archived` INTEGER NOT NULL, `archived_at` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationId",
            "columnName": "notification_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationKey",
            "columnName": "notification_key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourcePackage",
            "columnName": "source_package",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourceAppName",
            "columnName": "source_app_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subText",
            "columnName": "sub_text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "bigText",
            "columnName": "big_text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "summaryText",
            "columnName": "summary_text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "infoText",
            "columnName": "info_text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "whenTime",
            "columnName": "when_time",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "groupKey",
            "columnName": "group_key",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sortKey",
            "columnName": "sort_key",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "channelId",
            "columnName": "channel_id",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "visibility",
            "columnName": "visibility",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isOngoing",
            "columnName": "is_ongoing",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isClearable",
            "columnName": "is_clearable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDismissible",
            "columnName": "is_dismissible",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isGroupSummary",
            "columnName": "is_group_summary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isLocalOnly",
            "columnName": "is_local_only",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAutoCancelable",
            "columnName": "is_auto_cancelable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "largeIconPresent",
            "columnName": "large_icon_present",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "smallIconResource",
            "columnName": "small_icon_resource",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "number",
            "columnName": "number",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "progressMax",
            "columnName": "progress_max",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "progressCurrent",
            "columnName": "progress_current",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "progressIndeterminate",
            "columnName": "progress_indeterminate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "actionCount",
            "columnName": "action_count",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actionTitles",
            "columnName": "action_titles",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "extrasBundle",
            "columnName": "extras_bundle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "remoteInputAvailable",
            "columnName": "remote_input_available",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notesCreated",
            "columnName": "notes_created",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notesCreatedAt",
            "columnName": "notes_created_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "noteIds",
            "columnName": "note_ids",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "matchedRules",
            "columnName": "matched_rules",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ruleProcessingResult",
            "columnName": "rule_processing_result",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "wasAutoProcessed",
            "columnName": "was_auto_processed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deletedAt",
            "columnName": "deleted_at",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isArchived",
            "columnName": "is_archived",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "archivedAt",
            "columnName": "archived_at",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_all_notifications_notification_id",
            "unique": true,
            "columnNames": [
              "notification_id"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_all_notifications_notification_id` ON `${TABLE_NAME}` (`notification_id`)"
          },
          {
            "name": "index_all_notifications_source_package",
            "unique": false,
            "columnNames": [
              "source_package"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_all_notifications_source_package` ON `${TABLE_NAME}` (`source_package`)"
          },
          {
            "name": "index_all_notifications_timestamp",
            "unique": false,
            "columnNames": [
              "timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_all_notifications_timestamp` ON `${TABLE_NAME}` (`timestamp`)"
          },
          {
            "name": "index_all_notifications_notes_created",
            "unique": false,
            "columnNames": [
              "notes_created"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_all_notifications_notes_created` ON `${TABLE_NAME}` (`notes_created`)"
          },
          {
            "name": "index_all_notifications_notification_key",
            "unique": true,
            "columnNames": [
              "notification_key"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_all_notifications_notification_key` ON `${TABLE_NAME}` (`notification_key`)"
          },
          {
            "name": "index_all_notifications_source_package_title_content",
            "unique": false,
            "columnNames": [
              "source_package",
              "title",
              "content"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_all_notifications_source_package_title_content` ON `${TABLE_NAME}` (`source_package`, `title`, `content`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '5e737605285cf4fbf8e70fa59d863f4f')"
    ]
  }
}